<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuyanan.dao.RentMapperEx">
    <resultMap id="BaseResultMap" type="com.liuyanan.param.RentGroup">
        <result column="count" property="count" jdbcType="INTEGER"/>
        <result column="depart_id" property="departId" jdbcType="INTEGER"/>
        <result column="depart_name" property="departName" jdbcType="VARCHAR"/>
        <result column="item_id" property="itemId" jdbcType="INTEGER"/>
        <result column="item_name" property="itemName" jdbcType="VARCHAR"/>
        <result column="out_or_in" property="outOrIn" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="listGroup" parameterType="java.util.Map" resultMap="BaseResultMap">
      select depart.id as depart_id,depart.name as depart_name,item.id as item_id,
        item.item_name,
        case rent.out_or_in
        when 1 then '借出'
        when 0 then '借入'
        end as out_or_in,
        sum(rent.nums) as count
        from rent
        left join depart on rent.depart_id=depart.id
        left join item on rent.item_id=item.id
        left join category on category.id=item.cate_id
        where rent.rent_status=1 and rent.create_at between #{startTime} and #{endTime}
        group by depart.id,rent.item_id,rent.out_or_in

    </select>
</mapper>